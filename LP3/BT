
Add polygon mumbai to metamask
mumbai matic faucet

// SPDX-License-Identifier: Unlicensed
pragma solidity ^0.8.18;


contract MyBank
{
    mapping(address=> uint ) private _balances;
    address public owner;
    event LogDepositeMade(address accountHoder, uint amount );

    constructor () 
     {
         owner=msg.sender;
         emit LogDepositeMade(msg.sender, 1000);
     }

        function deposite() public payable  returns (uint)
        {

        require ((_balances[msg.sender] + msg.value) >  _balances[msg.sender] && msg.sender!=address(0));
        _balances[msg.sender] += msg.value;
        emit LogDepositeMade(msg.sender , msg.value);
        return _balances[msg.sender];
        } 

        function withdraw (uint withdrawAmount) public  returns (uint)
        {

                require (_balances[msg.sender] >= withdrawAmount);
                require(msg.sender!=address(0));
                require (_balances[msg.sender] > 0);
                _balances[msg.sender]-= withdrawAmount;
                address payable recipient = payable(msg.sender);
                recipient.transfer(withdrawAmount);
                emit LogDepositeMade(msg.sender , withdrawAmount);
                return _balances[msg.sender];

        }

        function viewBalance() public view returns (uint)
        {
            return _balances[msg.sender];
        }
}


pragma solidity >=0.7.0 <0.9.0;

contract Bank {
    
    mapping(address=>uint) private balances;
    
    function getBalance() public view returns (uint) {
        return balances[msg.sender];
    }

    function deposit(uint amount) public payable {
        // require(msg.value == amount);
        balances[msg.sender] += amount;
    }

    function withdraw(uint amount) public payable {
        require(amount <= balances[msg.sender]);
        balances[msg.sender] -= amount;
        // msg.sender.transfer(amount);
    }

}
